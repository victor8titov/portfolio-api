openapi: 3.0.0
info:
  title: Projects
  version: 0.0.1
tags:
  - name: projects
    description: Data on projects who made the owner of the page
paths:
  /projects:
    get:
      tags:
        - projects
      description: Get a list of all projects
      parameters:
        - in: query
          name: page 
          schema: 
            type: number
          example: 2
        - in: query
          name: pageSize
          schema:
            type: number
          example: 10
        - in: query
          name: sort
          schema:
            $ref: 'api-doc.yaml#/components/schemas/Sort'
        - in: query
          name: language
          schema:
            $ref: 'api-doc.yaml#/components/schemas/Language'
      responses:
        200:
          description: Successfully receive list projects
          content: 
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ProjectLanguageFields'
                  - type: object
                    properties:
                      sorted:
                        $ref: 'api-doc.yaml#/components/schemas/Sort'
                  - type: object
                    properties:
                      pagination:
                        $ref: 'api-doc.yaml#/components/schemas/PaginationInResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectView'
        400:
          $ref: 'api-doc.yaml#/components/responses/4XX'
        500:
          $ref: 'api-doc.yaml#/components/responses/5XX'
    post:
      tags:
        - projects
      description: Create a new project
      security:
        - BearerAuth: []
      requestBody:
        description: Data to create an essence project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreation'
      responses:
        200:
          $ref: 'api-doc.yaml#/components/responses/200AfterSuccessfulChangesEntity'
        400:
          $ref: 'api-doc.yaml#/components/responses/4XX'
        500:
          $ref: 'api-doc.yaml#/components/responses/5XX'
  /project/{id}:
    get:
      tags:
        - projects
      description: Get data on one project
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID for find project
        - in: query
          name: language
          schema:
            $ref: 'api-doc.yaml#/components/schemas/Language'
      responses:
        200: 
          description: Successfully receive data on one project
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ProjectLanguageFields'
                  - $ref: '#/components/schemas/ProjectView'
        400:
          $ref: 'api-doc.yaml#/components/responses/4XX'
        500:
          $ref: 'api-doc.yaml#/components/responses/5XX'
    put:
      tags:
        - projects
      description: Change the essence object completely
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id for find project
      requestBody:
        description: New parameters for project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreation'
      responses:
        200:
          $ref: 'api-doc.yaml#/components/responses/200AfterSuccessfulChangesEntity'
        400:
          $ref: 'api-doc.yaml#/components/responses/4XX'
        500:
          $ref: 'api-doc.yaml#/components/responses/5XX'
    delete:
      tags:
        - projects
      description: Delete the project
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id for find project for delete
      responses:
        200:
          $ref: 'api-doc.yaml#/components/responses/200AfterSuccessfulChangesEntity'
        400:
          $ref: 'api-doc.yaml#/components/responses/4XX'
        500:
          $ref: 'api-doc.yaml#/components/responses/5XX'
  /project/{id}/multilingual:
    get:
      tags:
        - projects
      description: Get data on one project on all languages
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID for find project
      responses:
        200: 
          description: Successfully received data of project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectViewMultilingual'
        400:
          $ref: 'api-doc.yaml#/components/responses/4XX'
        500:
          $ref: 'api-doc.yaml#/components/responses/5XX'

components:
  schemas:
    ProjectLanguageFields: 
      type: object
      properties:
        languages: 
          $ref: 'api-doc.yaml#/components/schemas/Languages'
        currentLanguage: 
          $ref: 'api-doc.yaml#/components/schemas/Language'

    ProjectCommon:
      type: object
      properties:
        name:
          type: string
          example: name project
        type:
          type: string
          example: type
        stack: 
          type: array
          items:
            type: string
          example: ['html', 'css']
        spendTime: 
          type: string
          example: string may be like 2 days
        events:
          $ref: 'api-doc.yaml#/components/schemas/Events'
      required:
        - name

    ProjectCreation:
      allOf:
        - $ref: '#/components/schemas/ProjectCommon'
        - type: object
          properties:
            description:
              $ref: 'api-doc.yaml#/components/schemas/StringWithDivisionIntoLanguages'
            imagesId:
              type: array
              items:
                type: string
                example: 1
            links: 
              type: array
              items: 
                $ref: 'api-doc.yaml#/components/schemas/LinkCreation'
  
    ProjectView:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: 5
            description:
              type: string
              example: description in Russian
            images:
              type: array
              items:
                $ref: 'image.yaml#/components/schemas/Image'
            links: 
              type: array
              items: 
                $ref: 'api-doc.yaml#/components/schemas/LinkView'
        - $ref: '#/components/schemas/ProjectCommon'
      
    ProjectViewMultilingual:
      allOf:
        - $ref: '#/components/schemas/ProjectCommon'
        - type: object
          properties:
            id:
              type: string
              example: 5
            description:
              $ref: 'api-doc.yaml#/components/schemas/StringWithDivisionIntoLanguages'
            images:
              type: array
              items:
                $ref: 'image.yaml#/components/schemas/Image'
            links: 
              type: array
              items: 
                $ref: 'api-doc.yaml#/components/schemas/LinkView'
