openapi: 3.0.0

info:
  title: Portfolio REST API
  description: Api for backend project Portfolio
  contact:
    email: victor8titov@yandex.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1

servers:
- url: http://localhost:8000/api
  description: dev server

paths:
  /user:
    $ref: 'user.yaml#/paths/~1user'
  /auth/login:
    $ref: 'auth.yaml#/paths/~1auth~1login'
  /auth/logout:
    $ref: 'auth.yaml#/paths/~1auth~1logout'
  /auth/refresh-token:
    $ref: 'auth.yaml#/paths/~1auth~1refresh-token'
  /homepage:
    $ref: 'homepage.yaml#/paths/~1homepage'
  /projects:
    $ref: 'projects.yaml#/paths/~1projects'
  /project/{id}:
    $ref: 'projects.yaml#/paths/~1project~1{id}'
  /skills:
    $ref: 'skills.yaml#/paths/~1skills'
  /skill/{id}:
    $ref: 'skills.yaml#/paths/~1skill~1{id}'
  /time-stamps:
    $ref: 'time-stamps.yaml#/paths/~1time-stamps'
  /time-stamp/{id}:
   $ref: 'time-stamps.yaml#/paths/~1time-stamp~1{id}'
  /callback:
   $ref: 'callback.yaml#/paths/~1callback'
  /social-media:
    $ref: 'social-media.yaml#/paths/~1social-media'
  /social-media/{id}:
    $ref: 'social-media.yaml#/paths/~1social-media~1{id}'
  /upload/image:
   $ref: 'upload.yaml#/paths/~1upload~1image'
  /images:
    $ref: 'image.yaml#/paths/~1images'
  /image/{id}:
   $ref: 'image.yaml#/paths/~1image~1{id}'

components:
  securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT

  schemas:
    LinkView:
      type: object
      properties:
        name: 
          type: string
          example: Github
        link:
          type: string
          example: http://example-link.dd
        icon:
          $ref: 'image.yaml#/components/schemas/Image'
      required:
        - link

    LinkCreation:
      type: object
      properties:
        name: 
          type: string
          example: Github
        link:
          type: string
          example: http://example-link.dd
        imageId:
          type: string
          example: 5
      required:
        - link 
  
    Events:
      type: array
      items: 
        type: object
        properties:
          date: 
            type: string
            example: "2021-10-10T00:00:00.000Z"
          status:
            type: string
            example: status 
        required:
          - date
          - status

    StringWithDivisionIntoLanguages:
      type: object
      properties:
        en: 
          type: string
          example: 'Text in English'
        ru:
          type: string
          example: 'Текст на русском языке'

    Sort: 
      type: array
      items:
        type: string
      example:
        ['+name', '-name']

    Language: 
      type: string
      enum:
        - ru
        - en
      example: 
        en
    
    Languages:
      type: array
      items: 
        type: string
        enum:
          - ru
          - en
      example: [ 'en', 'ru']
    
    PaginationInRequest:
      type: object
      properties:
        page: 
          type: number
          readOnly: true
        pageSize:
          type: number
          readOnly: true
      example:
        page: 1
        pageSize: 10
    
    PaginationInResponse:
      allOf:
        - $ref: "#/components/schemas/PaginationInRequest"
        - type: object
          properties:
            totalPages: 
              type: number
              readOnly: true
          required:
            - totalPages
          example:
            totalPages: 100
    
    4XX:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                readOnly: true
              source:
                type: string
                readOnly: true
              type: 
                type: string  
                readOnly: true
      example: { 
        errors: [ {
          source: title,
          type: TYPE_OF_ERROR ,
          message: Something is going wrong,
          }
        ]
      }
    
  responses:
    200AfterSuccessfulChangesEntity:
      description: Successful creating
      content:
        application/json:
          schema: 
            type: object
            properties:
              id: 
                type: string
                example: 1
              message: 
                type: string
                example: Successful
            required:
              - id
    4XX:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/4XX'
    
    403:
      description: forbidden
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                readOnly: true
            example:
              message: Forbidden
    422:
      description: |
        Unprocessable Entity
        Answer 422 (Unprocessable Entity) means that the server understands the specified data type, and the query syntax is correct.But the token itself will not be valid
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                readOnly: true
            example:
              message: Token isn't valid
      
    5XX:
      description: Internal Server Error
      content: 
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                readOnly: true
            example:
              message: Sorry internal server error
    
    UnauthorizedError:
      description: User unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/4XX'    
    
    
  